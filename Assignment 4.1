1)

import java.io.*;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.fs.FileStatus;

public class FileListing {
	public static void main(String[] args) {
		if (args.length != 1) {
			System.out.println("Pass one argument");
			System.exit(1);
		}
		
		Path path = new Path(args[0]);
		
		try
		{
			Configuration conf = new Configuration();
			FileSystem fileSystem = FileSystem.get(path.toUri(), conf);
			FileStatus[] fileStatus=fileSystem.listStatus(path);
			
			for (FileStatus fStat : fileStatus) {
				if (fStat.isDirectory()) {
					System.out.println("Directory: " + fStat.getPath());
				}
				else if (fStat.isFile()) {
					System.out.println("File: " + fStat.getPath());
				}
				else if (fStat.isSymlink()) {
					System.out.println("Symlink: " + fStat.getPath());
				}
			}

		}
		catch (IOException e)
		{
            e.printStackTrace();
		}
	}
}

2)

 import java.io.*;
  import org.apache.hadoop.conf.Configuration;
  import org.apache.hadoop.fs.FileSystem;
  import org.apache.hadoop.fs.LocatedFileStatus:
  import org.apache.hadoop.fs.Path;
  import org.apache.hadoop.fs.FileStatus;

  public class fileListing
  {
      public static void main(String[] args)
      {
        if (args.length != 1)
        {
          System.out.println("Enter any one argument");
          System.exit(1);
        }
        Path P = new Path(args[0]);
        try
        {
          Configuration conf = new Configuration();
          FileSystem fileSystem = FileSystem.get(P.toUri(), conf);
          FileStatus[] filestatus=filesystem.listStatus(P);
          RemoteIterator<LocatedFileStatus> it =filesystem.listFiles(P,true);
          while(it.hasNext()) 
          {
            System.out.println(it.next().getPath());
          }
        }
        catch (IOException e)
        {
              e.printStackTrace();
        }
      }
  }
 
 3)
 
 import java.io.*;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.fs.RemoteIterator;
 import org.apache.hadoop.fs.LocatedFileStatus;

 public class FileListing
 {
 public static void main(String[] args) 
 {
 int l=args.length;	
 for(int i=0;i<l;i++)
 {
 Path path=new Path(args[i]);	
 try
 {
 Configuration conf = new Configuration();
 FileSystem fileSystem = FileSystem.get(path.toUri(), conf);
 RemoteIterator<LocatedFileStatus> it=fileSystem.listFiles(path,true); //recursive set to true(second parameter)
 System.out.println(“for argument : “+args[i]);
 while(it.hasNext())
 {
 System.out.println(it.next().getPath());
 }
 }
 catch (IOException exc)
 {
 exec.printStackTrace();
 }
 }
 }
 }
